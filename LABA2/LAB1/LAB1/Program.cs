// See https://aka.ms/new-console-template for more information

using LAB1;

Console.WriteLine("Hello, World!");
Company company1 = Creator.RandomCompany();
Company company2 = Creator.RandomCompany();
Company company3 = Creator.RandomCompany();
Company company4 = Creator.RandomCompany();
Company company5 = Creator.RandomCompany();
Company company6 = Creator.RandomCompany();
List<Company> companies = new List<Company>();
companies.Add(company1);
companies.Add(company2);
companies.Add(company3);
companies.Add(company4);
companies.Add(company5);
companies.Add(company6);
Console.WriteLine("Task1");
companies.ForEach(company=>Console.WriteLine(company.ToString()));
Console.WriteLine("Task2");
var foodcompany = companies.Where(company=>company.CompanyName.Contains("Food")).Select(company=>company.ToString()).ToList();
foodcompany.ForEach(company=>Console.WriteLine(company));
Console.WriteLine("Task3");
var marketingCompany = companies.Where(company => company.Profile == "Marketing").Select(company => company.ToString()).ToList();
marketingCompany.ForEach(company=>Console.WriteLine(company));
Console.WriteLine("Task4");
var marketinOrItCompany = companies.Where(company => company.Profile == "Marketing"||company.Profile == "IT").Select(company => company.ToString()).ToList();
marketinOrItCompany.ForEach(company=>Console.WriteLine(company));
Console.WriteLine("Task5");
var oneHundredOrMoreWorkers = companies.Where(company => company.AmountOfWorkers>100).Select(company => company.ToString()).ToList();
oneHundredOrMoreWorkers.ForEach(company=>Console.WriteLine(company));
Console.WriteLine("Task6");
var oneToThreeHundreWorkers = companies.Where(company => company.AmountOfWorkers>100&&company.AmountOfWorkers<300).Select(company => company.ToString()).ToList();
oneToThreeHundreWorkers.ForEach(company=>Console.WriteLine(company));
Console.WriteLine("Task7");
var londonCompanies = companies.Where(company => company.Adress.Contains("London")).Select(company=>company.ToString()).ToList();
londonCompanies.ForEach(company=>Console.WriteLine(company));
Console.WriteLine("Task8");
var whiteDirector = companies.Where(company => company.DirectorPIB.Contains("White")).Select(company => company.ToString()).ToList();
whiteDirector.ForEach(company=>Console.WriteLine(company));
Console.WriteLine("Task9");
var olderThanTwoYears = companies.Where(company => company.DateOfFoundation<DateTime.Now.AddYears(-2)).Select(company => company.ToString()).ToList();
olderThanTwoYears.ForEach(company=>Console.WriteLine(company));
Console.WriteLine("Task10");
var olderThanMnogaDNey = companies.Where(company => company.DateOfFoundation<DateTime.Now.AddDays(-150)).Select(company => company.ToString()).ToList();
olderThanMnogaDNey.ForEach(company=>Console.WriteLine(company));
Console.WriteLine("Task11");
var uslovie = companies.Where(company => company.DirectorPIB.Contains("Black")&&company.CompanyName.Contains("White")).Select(company => company.ToString()).ToList();
uslovie.ForEach(company=>Console.WriteLine(company));